%!PS-Adobe-2.0
%%Title: tbestSi111.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Dec 11 13:58:00 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tbestSi111.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Alessandro Pisa)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 11 13:58:00 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times) findfont 200 scalefont setfont
1.000 UL
LTb
1340 1371 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 1371 M
[ [(Times) 200.0 0.0 true true 0 ( 0.65)]
] -66.7 MRshow
1.000 UL
LTb
1340 2324 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 2324 M
[ [(Times) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MRshow
1.000 UL
LTb
1340 3276 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 3276 M
[ [(Times) 200.0 0.0 true true 0 ( 0.75)]
] -66.7 MRshow
1.000 UL
LTb
1340 4229 M
63 0 V
5497 0 R
-63 0 V
stroke
1220 4229 M
[ [(Times) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
1.000 UL
LTb
1340 800 M
0 63 V
0 3937 R
0 -63 V
stroke
1340 600 M
[ [(Times) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
2035 800 M
0 63 V
0 3937 R
0 -63 V
stroke
2035 600 M
[ [(Times) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
2730 800 M
0 63 V
0 3937 R
0 -63 V
stroke
2730 600 M
[ [(Times) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
3425 800 M
0 63 V
0 3937 R
0 -63 V
stroke
3425 600 M
[ [(Times) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
4120 800 M
0 63 V
0 3937 R
0 -63 V
stroke
4120 600 M
[ [(Times) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
4815 800 M
0 63 V
0 3937 R
0 -63 V
stroke
4815 600 M
[ [(Times) 200.0 0.0 true true 0 ( 350)]
] -66.7 MCshow
1.000 UL
LTb
5510 800 M
0 63 V
0 3937 R
0 -63 V
stroke
5510 600 M
[ [(Times) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
6205 800 M
0 63 V
0 3937 R
0 -63 V
stroke
6205 600 M
[ [(Times) 200.0 0.0 true true 0 ( 450)]
] -66.7 MCshow
1.000 UL
LTb
6900 800 M
0 63 V
0 3937 R
0 -63 V
stroke
6900 600 M
[ [(Times) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1340 4800 N
0 -4000 V
5560 0 V
0 4000 V
-5560 0 V
Z stroke
LCb setrgbcolor
400 2800 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 240.0 0.0 true true 0 (Reflectivity)]
] -80.0 MCshow
grestore
LTb
LCb setrgbcolor
4120 300 M
[ [(Times) 240.0 0.0 true true 0 (Energy \(keV\))]
] -80.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
5997 4637 M
[ [(Times) 200.0 0.0 true true 0 (Bend Si\(111\))]
] -66.7 MRshow
LT0
1340 1510 Pls
1354 1540 Pls
1368 1568 Pls
1382 1596 Pls
1396 1621 Pls
1410 1649 Pls
1423 1675 Pls
1437 1697 Pls
1451 1722 Pls
1465 1745 Pls
1479 1768 Pls
1493 1790 Pls
1507 1813 Pls
1521 1833 Pls
1535 1853 Pls
1549 1873 Pls
1562 1893 Pls
1576 1913 Pls
1590 1933 Pls
1604 1950 Pls
1618 1967 Pls
1632 1988 Pls
1646 2005 Pls
1660 2019 Pls
1674 2037 Pls
1688 2054 Pls
1701 2068 Pls
1715 2086 Pls
1729 2100 Pls
1743 2115 Pls
1757 2132 Pls
1771 2147 Pls
1785 2162 Pls
1799 2173 Pls
1813 2188 Pls
1827 2202 Pls
1840 2214 Pls
1854 2229 Pls
1868 2241 Pls
1882 2255 Pls
1896 2267 Pls
1910 2279 Pls
1924 2294 Pls
1938 2305 Pls
1952 2317 Pls
1966 2329 Pls
1979 2341 Pls
1993 2353 Pls
2007 2361 Pls
2021 2373 Pls
2035 2385 Pls
2049 2397 Pls
2063 2406 Pls
2077 2418 Pls
2091 2427 Pls
2105 2439 Pls
2118 2448 Pls
2132 2460 Pls
2146 2469 Pls
2160 2478 Pls
2174 2489 Pls
2188 2498 Pls
2202 2507 Pls
2216 2516 Pls
2230 2525 Pls
2244 2537 Pls
2257 2546 Pls
2271 2555 Pls
2285 2564 Pls
2299 2573 Pls
2313 2583 Pls
2327 2589 Pls
2341 2598 Pls
2355 2607 Pls
2369 2616 Pls
2383 2625 Pls
2396 2634 Pls
2410 2640 Pls
2424 2649 Pls
2438 2658 Pls
2452 2664 Pls
2466 2673 Pls
2480 2682 Pls
2494 2688 Pls
2508 2697 Pls
2522 2703 Pls
2535 2713 Pls
2549 2722 Pls
2563 2728 Pls
2577 2734 Pls
2591 2743 Pls
2605 2749 Pls
2619 2758 Pls
2633 2764 Pls
2647 2774 Pls
2661 2780 Pls
2674 2786 Pls
2688 2795 Pls
2702 2801 Pls
2716 2807 Pls
2730 2813 Pls
2744 2822 Pls
2758 2829 Pls
2772 2835 Pls
2786 2841 Pls
2800 2850 Pls
2813 2856 Pls
2827 2862 Pls
2841 2868 Pls
2855 2875 Pls
2869 2881 Pls
2883 2887 Pls
2897 2893 Pls
2911 2902 Pls
2925 2908 Pls
2939 2915 Pls
2952 2921 Pls
2966 2927 Pls
2980 2933 Pls
2994 2939 Pls
3008 2946 Pls
3022 2952 Pls
3036 2958 Pls
3050 2964 Pls
3064 2967 Pls
3078 2973 Pls
3091 2980 Pls
3105 2986 Pls
3119 2992 Pls
3133 2998 Pls
3147 3004 Pls
3161 3011 Pls
3175 3017 Pls
3189 3020 Pls
3203 3026 Pls
3217 3032 Pls
3230 3039 Pls
3244 3045 Pls
3258 3048 Pls
3272 3054 Pls
3286 3060 Pls
3300 3067 Pls
3314 3070 Pls
3328 3076 Pls
3342 3082 Pls
3356 3088 Pls
3369 3092 Pls
3383 3098 Pls
3397 3104 Pls
3411 3107 Pls
3425 3113 Pls
3439 3120 Pls
3453 3123 Pls
3467 3129 Pls
3481 3135 Pls
3495 3138 Pls
3508 3145 Pls
3522 3151 Pls
3536 3154 Pls
3550 3160 Pls
3564 3164 Pls
3578 3170 Pls
3592 3176 Pls
3606 3179 Pls
3620 3186 Pls
3634 3189 Pls
3647 3195 Pls
3661 3198 Pls
3675 3204 Pls
3689 3208 Pls
3703 3214 Pls
3717 3220 Pls
3731 3223 Pls
3745 3230 Pls
3759 3233 Pls
3773 3239 Pls
3786 3242 Pls
3800 3245 Pls
3814 3252 Pls
3828 3255 Pls
3842 3261 Pls
3856 3264 Pls
3870 3271 Pls
3884 3274 Pls
3898 3280 Pls
3912 3283 Pls
3925 3286 Pls
3939 3293 Pls
3953 3296 Pls
3967 3302 Pls
3981 3305 Pls
3995 3309 Pls
4009 3315 Pls
4023 3318 Pls
4037 3324 Pls
4051 3328 Pls
4064 3331 Pls
4078 3337 Pls
4092 3340 Pls
4106 3344 Pls
4120 3350 Pls
4134 3353 Pls
4148 3356 Pls
4162 3363 Pls
4176 3366 Pls
4190 3369 Pls
4203 3375 Pls
4217 3379 Pls
4231 3382 Pls
4245 3388 Pls
4259 3391 Pls
4273 3394 Pls
4287 3398 Pls
4301 3404 Pls
4315 3407 Pls
4329 3410 Pls
4342 3414 Pls
4356 3420 Pls
4370 3423 Pls
4384 3426 Pls
4398 3430 Pls
4412 3436 Pls
4426 3439 Pls
4440 3442 Pls
4454 3446 Pls
4468 3452 Pls
4481 3455 Pls
4495 3458 Pls
4509 3462 Pls
4523 3465 Pls
4537 3471 Pls
4551 3474 Pls
4565 3478 Pls
4579 3481 Pls
4593 3484 Pls
4607 3490 Pls
4620 3494 Pls
4634 3497 Pls
4648 3500 Pls
4662 3503 Pls
4676 3507 Pls
4690 3513 Pls
4704 3516 Pls
4718 3519 Pls
4732 3523 Pls
4746 3526 Pls
4759 3529 Pls
4773 3532 Pls
4787 3535 Pls
4801 3542 Pls
4815 3545 Pls
4829 3548 Pls
4843 3552 Pls
4857 3555 Pls
4871 3558 Pls
4885 3562 Pls
4898 3565 Pls
4912 3569 Pls
4926 3573 Pls
4940 3576 Pls
4954 3579 Pls
4968 3583 Pls
4982 3586 Pls
4996 3590 Pls
5010 3593 Pls
5024 3597 Pls
5037 3600 Pls
5051 3604 Pls
5065 3607 Pls
5079 3610 Pls
5093 3614 Pls
5107 3617 Pls
5121 3620 Pls
5135 3624 Pls
5149 3627 Pls
5163 3630 Pls
5176 3634 Pls
5190 3637 Pls
5204 3641 Pls
5218 3644 Pls
5232 3647 Pls
5246 3650 Pls
5260 3654 Pls
5274 3657 Pls
5288 3660 Pls
5302 3663 Pls
5315 3666 Pls
5329 3670 Pls
5343 3673 Pls
5357 3676 Pls
5371 3679 Pls
5385 3682 Pls
5399 3686 Pls
5413 3689 Pls
5427 3692 Pls
5441 3695 Pls
5454 3698 Pls
5468 3701 Pls
5482 3705 Pls
5496 3707 Pls
5510 3711 Pls
5524 3714 Pls
5538 3717 Pls
5552 3720 Pls
5566 3723 Pls
5580 3726 Pls
5593 3729 Pls
5607 3732 Pls
5621 3735 Pls
5635 3738 Pls
5649 3741 Pls
5663 3744 Pls
5677 3747 Pls
5691 3750 Pls
5705 3753 Pls
5719 3756 Pls
5732 3759 Pls
5746 3762 Pls
5760 3765 Pls
5774 3768 Pls
5788 3771 Pls
5802 3774 Pls
5816 3777 Pls
5830 3780 Pls
5844 3782 Pls
5858 3785 Pls
5871 3788 Pls
5885 3791 Pls
5899 3794 Pls
5913 3797 Pls
5927 3800 Pls
5941 3803 Pls
5955 3805 Pls
5969 3808 Pls
5983 3811 Pls
5997 3814 Pls
6010 3817 Pls
6024 3819 Pls
6038 3822 Pls
6052 3825 Pls
6066 3828 Pls
6080 3831 Pls
6094 3833 Pls
6108 3836 Pls
6122 3839 Pls
6136 3842 Pls
6149 3844 Pls
6163 3847 Pls
6177 3850 Pls
6191 3853 Pls
6205 3855 Pls
6219 3858 Pls
6233 3861 Pls
6247 3863 Pls
6261 3866 Pls
6275 3869 Pls
6288 3871 Pls
6302 3874 Pls
6316 3877 Pls
6330 3880 Pls
6344 3882 Pls
6358 3885 Pls
6372 3887 Pls
6386 3890 Pls
6400 3893 Pls
6414 3895 Pls
6427 3898 Pls
6441 3900 Pls
6455 3903 Pls
6469 3906 Pls
6483 3908 Pls
6497 3911 Pls
6511 3913 Pls
6525 3916 Pls
6539 3918 Pls
6553 3921 Pls
6566 3923 Pls
6580 3926 Pls
6594 3929 Pls
6608 3931 Pls
6622 3934 Pls
6636 3936 Pls
6650 3939 Pls
6664 3941 Pls
6678 3944 Pls
6692 3946 Pls
6705 3949 Pls
6719 3951 Pls
6733 3954 Pls
6747 3956 Pls
6761 3959 Pls
6775 3961 Pls
6789 3963 Pls
6803 3966 Pls
6817 3968 Pls
6831 3971 Pls
6844 3973 Pls
6858 3976 Pls
6872 3978 Pls
6886 3981 Pls
6388 4637 Pls
1.000 UP
1.000 UL
LT1
LTb
5997 4437 M
[ [(Times) 200.0 0.0 true true 0 (Bend Si\(220\))]
] -66.7 MRshow
LT1
1340 1112 Crs
1354 1141 Crs
1368 1168 Crs
1382 1195 Crs
1396 1220 Crs
1410 1247 Crs
1423 1272 Crs
1437 1294 Crs
1451 1318 Crs
1465 1340 Crs
1479 1362 Crs
1493 1384 Crs
1507 1406 Crs
1521 1425 Crs
1535 1445 Crs
1549 1464 Crs
1562 1484 Crs
1576 1503 Crs
1590 1523 Crs
1604 1539 Crs
1618 1556 Crs
1632 1576 Crs
1646 1592 Crs
1660 1606 Crs
1674 1623 Crs
1688 1640 Crs
1701 1654 Crs
1715 1671 Crs
1729 1685 Crs
1743 1699 Crs
1757 1716 Crs
1771 1730 Crs
1785 1744 Crs
1799 1756 Crs
1813 1770 Crs
1827 1784 Crs
1840 1796 Crs
1854 1810 Crs
1868 1821 Crs
1882 1835 Crs
1896 1847 Crs
1910 1858 Crs
1924 1873 Crs
1938 1884 Crs
1952 1895 Crs
1966 1907 Crs
1979 1918 Crs
1993 1930 Crs
2007 1938 Crs
2021 1950 Crs
2035 1961 Crs
2049 1973 Crs
2063 1982 Crs
2077 1993 Crs
2091 2002 Crs
2105 2013 Crs
2118 2022 Crs
2132 2034 Crs
2146 2042 Crs
2160 2051 Crs
2174 2063 Crs
2188 2071 Crs
2202 2080 Crs
2216 2089 Crs
2230 2098 Crs
2244 2109 Crs
2257 2118 Crs
2271 2127 Crs
2285 2135 Crs
2299 2144 Crs
2313 2153 Crs
2327 2159 Crs
2341 2168 Crs
2355 2176 Crs
2369 2185 Crs
2383 2194 Crs
2396 2203 Crs
2410 2209 Crs
2424 2217 Crs
2438 2226 Crs
2452 2232 Crs
2466 2241 Crs
2480 2250 Crs
2494 2256 Crs
2508 2264 Crs
2522 2270 Crs
2535 2279 Crs
2549 2288 Crs
2563 2294 Crs
2577 2300 Crs
2591 2309 Crs
2605 2314 Crs
2619 2323 Crs
2633 2329 Crs
2647 2338 Crs
2661 2344 Crs
2674 2350 Crs
2688 2359 Crs
2702 2365 Crs
2716 2371 Crs
2730 2377 Crs
2744 2386 Crs
2758 2392 Crs
2772 2398 Crs
2786 2403 Crs
2800 2412 Crs
2813 2418 Crs
2827 2424 Crs
2841 2430 Crs
2855 2436 Crs
2869 2442 Crs
2883 2448 Crs
2897 2454 Crs
2911 2463 Crs
2925 2469 Crs
2939 2475 Crs
2952 2481 Crs
2966 2487 Crs
2980 2493 Crs
2994 2499 Crs
3008 2505 Crs
3022 2511 Crs
3036 2517 Crs
3050 2523 Crs
3064 2526 Crs
3078 2532 Crs
3091 2538 Crs
3105 2544 Crs
3119 2550 Crs
3133 2556 Crs
3147 2562 Crs
3161 2568 Crs
3175 2574 Crs
3189 2577 Crs
3203 2583 Crs
3217 2589 Crs
3230 2595 Crs
3244 2601 Crs
3258 2604 Crs
3272 2610 Crs
3286 2616 Crs
3300 2622 Crs
3314 2625 Crs
3328 2631 Crs
3342 2637 Crs
3356 2643 Crs
3369 2646 Crs
3383 2653 Crs
3397 2659 Crs
3411 2662 Crs
3425 2668 Crs
3439 2674 Crs
3453 2677 Crs
3467 2683 Crs
3481 2689 Crs
3495 2692 Crs
3508 2698 Crs
3522 2704 Crs
3536 2707 Crs
3550 2713 Crs
3564 2716 Crs
3578 2722 Crs
3592 2728 Crs
3606 2732 Crs
3620 2738 Crs
3634 2741 Crs
3647 2747 Crs
3661 2750 Crs
3675 2756 Crs
3689 2759 Crs
3703 2765 Crs
3717 2771 Crs
3731 2774 Crs
3745 2780 Crs
3759 2783 Crs
3773 2789 Crs
3786 2793 Crs
3800 2796 Crs
3814 2802 Crs
3828 2805 Crs
3842 2811 Crs
3856 2814 Crs
3870 2820 Crs
3884 2823 Crs
3898 2829 Crs
3912 2832 Crs
3925 2835 Crs
3939 2842 Crs
3953 2845 Crs
3967 2851 Crs
3981 2854 Crs
3995 2857 Crs
4009 2863 Crs
4023 2866 Crs
4037 2872 Crs
4051 2875 Crs
4064 2878 Crs
4078 2885 Crs
4092 2888 Crs
4106 2891 Crs
4120 2897 Crs
4134 2900 Crs
4148 2903 Crs
4162 2909 Crs
4176 2912 Crs
4190 2915 Crs
4203 2922 Crs
4217 2925 Crs
4231 2928 Crs
4245 2934 Crs
4259 2937 Crs
4273 2940 Crs
4287 2943 Crs
4301 2949 Crs
4315 2952 Crs
4329 2956 Crs
4342 2959 Crs
4356 2965 Crs
4370 2968 Crs
4384 2971 Crs
4398 2974 Crs
4412 2980 Crs
4426 2983 Crs
4440 2987 Crs
4454 2990 Crs
4468 2996 Crs
4481 2999 Crs
4495 3002 Crs
4509 3005 Crs
4523 3008 Crs
4537 3014 Crs
4551 3018 Crs
4565 3021 Crs
4579 3024 Crs
4593 3027 Crs
4607 3033 Crs
4620 3036 Crs
4634 3039 Crs
4648 3042 Crs
4662 3046 Crs
4676 3049 Crs
4690 3055 Crs
4704 3058 Crs
4718 3061 Crs
4732 3064 Crs
4746 3067 Crs
4759 3071 Crs
4773 3074 Crs
4787 3077 Crs
4801 3083 Crs
4815 3086 Crs
4829 3089 Crs
4843 3092 Crs
4857 3095 Crs
4871 3099 Crs
4885 3102 Crs
4898 3106 Crs
4912 3109 Crs
4926 3113 Crs
4940 3116 Crs
4954 3119 Crs
4968 3123 Crs
4982 3126 Crs
4996 3130 Crs
5010 3133 Crs
5024 3136 Crs
5037 3139 Crs
5051 3143 Crs
5065 3146 Crs
5079 3149 Crs
5093 3152 Crs
5107 3156 Crs
5121 3159 Crs
5135 3162 Crs
5149 3166 Crs
5163 3169 Crs
5176 3172 Crs
5190 3175 Crs
5204 3179 Crs
5218 3182 Crs
5232 3185 Crs
5246 3188 Crs
5260 3191 Crs
5274 3194 Crs
5288 3197 Crs
5302 3201 Crs
5315 3204 Crs
5329 3207 Crs
5343 3210 Crs
5357 3213 Crs
5371 3216 Crs
5385 3219 Crs
5399 3222 Crs
5413 3225 Crs
5427 3228 Crs
5441 3231 Crs
5454 3234 Crs
5468 3237 Crs
5482 3241 Crs
5496 3243 Crs
5510 3247 Crs
5524 3249 Crs
5538 3253 Crs
5552 3255 Crs
5566 3258 Crs
5580 3261 Crs
5593 3264 Crs
5607 3267 Crs
5621 3270 Crs
5635 3273 Crs
5649 3276 Crs
5663 3279 Crs
5677 3282 Crs
5691 3285 Crs
5705 3288 Crs
5719 3290 Crs
5732 3293 Crs
5746 3296 Crs
5760 3299 Crs
5774 3302 Crs
5788 3305 Crs
5802 3308 Crs
5816 3310 Crs
5830 3313 Crs
5844 3316 Crs
5858 3319 Crs
5871 3322 Crs
5885 3324 Crs
5899 3327 Crs
5913 3330 Crs
5927 3333 Crs
5941 3336 Crs
5955 3338 Crs
5969 3341 Crs
5983 3344 Crs
5997 3346 Crs
6010 3349 Crs
6024 3352 Crs
6038 3355 Crs
6052 3357 Crs
6066 3360 Crs
6080 3363 Crs
6094 3365 Crs
6108 3368 Crs
6122 3371 Crs
6136 3373 Crs
6149 3376 Crs
6163 3378 Crs
6177 3381 Crs
6191 3384 Crs
6205 3386 Crs
6219 3389 Crs
6233 3392 Crs
6247 3394 Crs
6261 3397 Crs
6275 3400 Crs
6288 3402 Crs
6302 3405 Crs
6316 3408 Crs
6330 3410 Crs
6344 3413 Crs
6358 3415 Crs
6372 3418 Crs
6386 3420 Crs
6400 3423 Crs
6414 3425 Crs
6427 3428 Crs
6441 3430 Crs
6455 3433 Crs
6469 3435 Crs
6483 3438 Crs
6497 3440 Crs
6511 3443 Crs
6525 3445 Crs
6539 3448 Crs
6553 3450 Crs
6566 3453 Crs
6580 3455 Crs
6594 3458 Crs
6608 3460 Crs
6622 3463 Crs
6636 3465 Crs
6650 3467 Crs
6664 3470 Crs
6678 3472 Crs
6692 3475 Crs
6705 3477 Crs
6719 3480 Crs
6733 3482 Crs
6747 3484 Crs
6761 3487 Crs
6775 3489 Crs
6789 3491 Crs
6803 3494 Crs
6817 3496 Crs
6831 3498 Crs
6844 3501 Crs
6858 3503 Crs
6872 3506 Crs
6886 3508 Crs
6388 4437 Crs
1.000 UL
LTb
1340 4800 N
0 -4000 V
5560 0 V
0 4000 V
-5560 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
%%Pages: 1
