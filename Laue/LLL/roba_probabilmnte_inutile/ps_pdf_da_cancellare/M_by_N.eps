%!PS-Adobe-2.0
%%Title: M_by_N.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Thu Nov 24 11:22:29 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (M_by_N.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Alessandro Pisa)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Nov 24 11:22:29 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times) findfont 200 scalefont setfont
/Times findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1700 640 M
5100 0 V
stroke
LTb
1700 640 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 640 M
[ [(Times) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 1333 M
5100 0 V
stroke
LTb
1700 1333 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 1333 M
[ [(Times) 200.0 0.0 true true 0 ( 2e-10)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 2027 M
5100 0 V
stroke
LTb
1700 2027 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 2027 M
[ [(Times) 200.0 0.0 true true 0 ( 4e-10)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 2720 M
5100 0 V
stroke
LTb
1700 2720 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 2720 M
[ [(Times) 200.0 0.0 true true 0 ( 6e-10)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 3413 M
5100 0 V
stroke
LTb
1700 3413 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 3413 M
[ [(Times) 200.0 0.0 true true 0 ( 8e-10)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 4107 M
5100 0 V
stroke
LTb
1700 4107 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 4107 M
[ [(Times) 200.0 0.0 true true 0 ( 1e-09)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 4800 M
5100 0 V
stroke
LTb
1700 4800 M
63 0 V
5037 0 R
-63 0 V
stroke
1580 4800 M
[ [(Times) 200.0 0.0 true true 0 ( 1.2e-09)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1700 640 M
0 4160 V
stroke
LTb
1700 640 M
0 63 V
0 4097 R
0 -63 V
stroke
1700 440 M
[ [(Times) 200.0 0.0 true true 0 ( 50)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2267 640 M
0 4160 V
stroke
LTb
2267 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2267 440 M
[ [(Times) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2833 640 M
0 4160 V
stroke
LTb
2833 640 M
0 63 V
0 4097 R
0 -63 V
stroke
2833 440 M
[ [(Times) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3400 640 M
0 4160 V
stroke
LTb
3400 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3400 440 M
[ [(Times) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3967 640 M
0 4160 V
stroke
LTb
3967 640 M
0 63 V
0 4097 R
0 -63 V
stroke
3967 440 M
[ [(Times) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4533 640 M
0 3897 V
0 200 R
0 63 V
stroke
LTb
4533 640 M
0 63 V
0 4097 R
0 -63 V
stroke
4533 440 M
[ [(Times) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5100 640 M
0 3897 V
0 200 R
0 63 V
stroke
LTb
5100 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5100 440 M
[ [(Times) 200.0 0.0 true true 0 ( 350)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5667 640 M
0 3897 V
0 200 R
0 63 V
stroke
LTb
5667 640 M
0 63 V
0 4097 R
0 -63 V
stroke
5667 440 M
[ [(Times) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6233 640 M
0 3897 V
0 200 R
0 63 V
stroke
LTb
6233 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6233 440 M
[ [(Times) 200.0 0.0 true true 0 ( 450)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6800 640 M
0 4160 V
stroke
LTb
6800 640 M
0 63 V
0 4097 R
0 -63 V
stroke
6800 440 M
[ [(Times) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1700 4800 N
0 -4160 V
5100 0 V
0 4160 V
-5100 0 V
Z stroke
LCb setrgbcolor
400 2720 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 200.0 0.0 true true 0 (M/N)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
4250 140 M
[ [(Times) 200.0 0.0 true true 0 (energy\(keV\))]
] -66.7 MCshow
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Times findfont 200 scalefont setfont
LTb
5897 4637 M
('M_by_N.dat') Rshow
LT0
1700 4334 Pls
1711 4193 Pls
1723 4059 Pls
1734 3933 Pls
1745 3814 Pls
1757 3701 Pls
1768 3594 Pls
1779 3492 Pls
1791 3396 Pls
1802 3304 Pls
1813 3217 Pls
1825 3134 Pls
1836 3055 Pls
1847 2979 Pls
1859 2907 Pls
1870 2839 Pls
1881 2773 Pls
1893 2710 Pls
1904 2650 Pls
1915 2593 Pls
1927 2538 Pls
1938 2485 Pls
1949 2435 Pls
1961 2386 Pls
1972 2340 Pls
1983 2295 Pls
1995 2252 Pls
2006 2211 Pls
2017 2171 Pls
2029 2133 Pls
2040 2096 Pls
2051 2060 Pls
2063 2026 Pls
2074 1993 Pls
2085 1961 Pls
2097 1930 Pls
2108 1901 Pls
2119 1872 Pls
2131 1844 Pls
2142 1817 Pls
2153 1791 Pls
2165 1766 Pls
2176 1742 Pls
2187 1719 Pls
2199 1696 Pls
2210 1674 Pls
2221 1653 Pls
2233 1632 Pls
2244 1612 Pls
2255 1592 Pls
2267 1573 Pls
2278 1555 Pls
2289 1537 Pls
2301 1520 Pls
2312 1503 Pls
2323 1487 Pls
2335 1471 Pls
2346 1456 Pls
2357 1441 Pls
2369 1426 Pls
2380 1412 Pls
2391 1398 Pls
2403 1385 Pls
2414 1372 Pls
2425 1359 Pls
2437 1346 Pls
2448 1334 Pls
2459 1323 Pls
2471 1311 Pls
2482 1300 Pls
2493 1289 Pls
2505 1278 Pls
2516 1268 Pls
2527 1258 Pls
2539 1248 Pls
2550 1238 Pls
2561 1229 Pls
2573 1220 Pls
2584 1211 Pls
2595 1202 Pls
2607 1193 Pls
2618 1185 Pls
2629 1177 Pls
2641 1169 Pls
2652 1161 Pls
2663 1153 Pls
2675 1146 Pls
2686 1138 Pls
2697 1131 Pls
2709 1124 Pls
2720 1117 Pls
2731 1110 Pls
2743 1104 Pls
2754 1097 Pls
2765 1091 Pls
2777 1085 Pls
2788 1079 Pls
2799 1073 Pls
2811 1067 Pls
2822 1061 Pls
2833 1056 Pls
2845 1050 Pls
2856 1045 Pls
2867 1040 Pls
2879 1034 Pls
2890 1029 Pls
2901 1024 Pls
2913 1019 Pls
2924 1015 Pls
2935 1010 Pls
2947 1005 Pls
2958 1001 Pls
2969 996 Pls
2981 992 Pls
2992 988 Pls
3003 984 Pls
3015 980 Pls
3026 975 Pls
3037 971 Pls
3049 968 Pls
3060 964 Pls
3071 960 Pls
3083 956 Pls
3094 953 Pls
3105 949 Pls
3117 946 Pls
3128 942 Pls
3139 939 Pls
3151 935 Pls
3162 932 Pls
3173 929 Pls
3185 926 Pls
3196 923 Pls
3207 919 Pls
3219 916 Pls
3230 913 Pls
3241 910 Pls
3253 908 Pls
3264 905 Pls
3275 902 Pls
3287 899 Pls
3298 897 Pls
3309 894 Pls
3321 891 Pls
3332 889 Pls
3343 886 Pls
3355 884 Pls
3366 881 Pls
3377 879 Pls
3389 876 Pls
3400 874 Pls
3411 872 Pls
3423 869 Pls
3434 867 Pls
3445 865 Pls
3457 863 Pls
3468 861 Pls
3479 858 Pls
3491 856 Pls
3502 854 Pls
3513 852 Pls
3525 850 Pls
3536 848 Pls
3547 846 Pls
3559 844 Pls
3570 842 Pls
3581 841 Pls
3593 839 Pls
3604 837 Pls
3615 835 Pls
3627 833 Pls
3638 832 Pls
3649 830 Pls
3661 828 Pls
3672 827 Pls
3683 825 Pls
3695 823 Pls
3706 822 Pls
3717 820 Pls
3729 819 Pls
3740 817 Pls
3751 815 Pls
3763 814 Pls
3774 812 Pls
3785 811 Pls
3797 810 Pls
3808 808 Pls
3819 807 Pls
3831 805 Pls
3842 804 Pls
3853 803 Pls
3865 801 Pls
3876 800 Pls
3887 799 Pls
3899 797 Pls
3910 796 Pls
3921 795 Pls
3933 793 Pls
3944 792 Pls
3955 791 Pls
3967 790 Pls
3978 789 Pls
3989 787 Pls
4001 786 Pls
4012 785 Pls
4023 784 Pls
4035 783 Pls
4046 782 Pls
4057 781 Pls
4069 780 Pls
4080 779 Pls
4091 777 Pls
4103 776 Pls
4114 775 Pls
4125 774 Pls
4137 773 Pls
4148 772 Pls
4159 771 Pls
4171 770 Pls
4182 769 Pls
4193 768 Pls
4205 767 Pls
4216 767 Pls
4227 766 Pls
4239 765 Pls
4250 764 Pls
4261 763 Pls
4273 762 Pls
4284 761 Pls
4295 760 Pls
4307 759 Pls
4318 759 Pls
4329 758 Pls
4341 757 Pls
4352 756 Pls
4363 755 Pls
4375 754 Pls
4386 754 Pls
4397 753 Pls
4409 752 Pls
4420 751 Pls
4431 751 Pls
4443 750 Pls
4454 749 Pls
4465 748 Pls
4477 748 Pls
4488 747 Pls
4499 746 Pls
4511 745 Pls
4522 745 Pls
4533 744 Pls
4545 743 Pls
4556 743 Pls
4567 742 Pls
4579 741 Pls
4590 741 Pls
4601 740 Pls
4613 739 Pls
4624 739 Pls
4635 738 Pls
4647 737 Pls
4658 737 Pls
4669 736 Pls
4681 736 Pls
4692 735 Pls
4703 734 Pls
4715 734 Pls
4726 733 Pls
4737 733 Pls
4749 732 Pls
4760 731 Pls
4771 731 Pls
4783 730 Pls
4794 730 Pls
4805 729 Pls
4817 729 Pls
4828 728 Pls
4839 728 Pls
4851 727 Pls
4862 727 Pls
4873 726 Pls
4885 725 Pls
4896 725 Pls
4907 724 Pls
4919 724 Pls
4930 723 Pls
4941 723 Pls
4953 722 Pls
4964 722 Pls
4975 721 Pls
4987 721 Pls
4998 721 Pls
5009 720 Pls
5021 720 Pls
5032 719 Pls
5043 719 Pls
5055 718 Pls
5066 718 Pls
5077 717 Pls
5089 717 Pls
5100 716 Pls
5111 716 Pls
5123 716 Pls
5134 715 Pls
5145 715 Pls
5157 714 Pls
5168 714 Pls
5179 713 Pls
5191 713 Pls
5202 713 Pls
5213 712 Pls
5225 712 Pls
5236 711 Pls
5247 711 Pls
5259 711 Pls
5270 710 Pls
5281 710 Pls
5293 710 Pls
5304 709 Pls
5315 709 Pls
5327 708 Pls
5338 708 Pls
5349 708 Pls
5361 707 Pls
5372 707 Pls
5383 707 Pls
5395 706 Pls
5406 706 Pls
5417 706 Pls
5429 705 Pls
5440 705 Pls
5451 705 Pls
5463 704 Pls
5474 704 Pls
5485 704 Pls
5497 703 Pls
5508 703 Pls
5519 703 Pls
5531 702 Pls
5542 702 Pls
5553 702 Pls
5565 701 Pls
5576 701 Pls
5587 701 Pls
5599 700 Pls
5610 700 Pls
5621 700 Pls
5633 699 Pls
5644 699 Pls
5655 699 Pls
5667 699 Pls
5678 698 Pls
5689 698 Pls
5701 698 Pls
5712 697 Pls
5723 697 Pls
5735 697 Pls
5746 697 Pls
5757 696 Pls
5769 696 Pls
5780 696 Pls
5791 695 Pls
5803 695 Pls
5814 695 Pls
5825 695 Pls
5837 694 Pls
5848 694 Pls
5859 694 Pls
5871 694 Pls
5882 693 Pls
5893 693 Pls
5905 693 Pls
5916 693 Pls
5927 692 Pls
5939 692 Pls
5950 692 Pls
5961 692 Pls
5973 691 Pls
5984 691 Pls
5995 691 Pls
6007 691 Pls
6018 690 Pls
6029 690 Pls
6041 690 Pls
6052 690 Pls
6063 689 Pls
6075 689 Pls
6086 689 Pls
6097 689 Pls
6109 689 Pls
6120 688 Pls
6131 688 Pls
6143 688 Pls
6154 688 Pls
6165 688 Pls
6177 687 Pls
6188 687 Pls
6199 687 Pls
6211 687 Pls
6222 686 Pls
6233 686 Pls
6245 686 Pls
6256 686 Pls
6267 686 Pls
6279 685 Pls
6290 685 Pls
6301 685 Pls
6313 685 Pls
6324 685 Pls
6335 684 Pls
6347 684 Pls
6358 684 Pls
6369 684 Pls
6381 684 Pls
6392 684 Pls
6403 683 Pls
6415 683 Pls
6426 683 Pls
6437 683 Pls
6449 683 Pls
6460 682 Pls
6471 682 Pls
6483 682 Pls
6494 682 Pls
6505 682 Pls
6517 682 Pls
6528 681 Pls
6539 681 Pls
6551 681 Pls
6562 681 Pls
6573 681 Pls
6585 680 Pls
6596 680 Pls
6607 680 Pls
6619 680 Pls
6630 680 Pls
6641 680 Pls
6653 679 Pls
6664 679 Pls
6675 679 Pls
6687 679 Pls
6698 679 Pls
6709 679 Pls
6721 679 Pls
6732 678 Pls
6743 678 Pls
6755 678 Pls
6766 678 Pls
6777 678 Pls
6789 678 Pls
6288 4637 Pls
1.000 UL
LTb
1700 4800 N
0 -4160 V
5100 0 V
0 4160 V
-5100 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
%%Pages: 1
