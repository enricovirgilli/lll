%!PS-Adobe-2.0
%%Title: GE_SI0.7cm.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue May 24 17:56:05 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (GE_SI0.7cm.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Alessandro Pisa)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 24 17:56:05 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times) findfont 200 scalefont setfont
1.000 UL
LTb
1020 731 M
63 0 V
5717 0 R
-63 0 V
stroke
900 731 M
[ [(Times) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1020 1184 M
63 0 V
5717 0 R
-63 0 V
stroke
900 1184 M
[ [(Times) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MRshow
1.000 UL
LTb
1020 1637 M
63 0 V
5717 0 R
-63 0 V
stroke
900 1637 M
[ [(Times) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
1.000 UL
LTb
1020 2090 M
63 0 V
5717 0 R
-63 0 V
stroke
900 2090 M
[ [(Times) 200.0 0.0 true true 0 ( 0.3)]
] -66.7 MRshow
1.000 UL
LTb
1020 2543 M
63 0 V
5717 0 R
-63 0 V
stroke
900 2543 M
[ [(Times) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
1.000 UL
LTb
1020 2996 M
63 0 V
5717 0 R
-63 0 V
stroke
900 2996 M
[ [(Times) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
1.000 UL
LTb
1020 3449 M
63 0 V
5717 0 R
-63 0 V
stroke
900 3449 M
[ [(Times) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
1.000 UL
LTb
1020 3902 M
63 0 V
5717 0 R
-63 0 V
stroke
900 3902 M
[ [(Times) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MRshow
1.000 UL
LTb
1020 4356 M
63 0 V
5717 0 R
-63 0 V
stroke
900 4356 M
[ [(Times) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
1.000 UL
LTb
1972 400 M
0 63 V
0 4337 R
0 -63 V
stroke
1972 200 M
[ [(Times) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
3167 400 M
0 63 V
0 4337 R
0 -63 V
stroke
3167 200 M
[ [(Times) 200.0 0.0 true true 0 ( 150)]
] -66.7 MCshow
1.000 UL
LTb
4362 400 M
0 63 V
0 4337 R
0 -63 V
stroke
4362 200 M
[ [(Times) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
5558 400 M
0 63 V
0 4337 R
0 -63 V
stroke
5558 200 M
[ [(Times) 200.0 0.0 true true 0 ( 250)]
] -66.7 MCshow
1.000 UL
LTb
6753 400 M
0 63 V
0 4337 R
0 -63 V
stroke
6753 200 M
[ [(Times) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1020 4800 N
0 -4400 V
5780 0 V
0 4400 V
-5780 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
5897 4637 M
[ [(Times) 200.0 0.0 true true 0 (Si111 0.7 cm )]
] -66.7 MRshow
LT0
1040 3625 Pls
1064 3655 Pls
1087 3684 Pls
1111 3711 Pls
1135 3737 Pls
1159 3761 Pls
1183 3785 Pls
1207 3807 Pls
1231 3828 Pls
1255 3848 Pls
1279 3866 Pls
1303 3884 Pls
1327 3902 Pls
1350 3918 Pls
1374 3934 Pls
1398 3949 Pls
1422 3963 Pls
1446 3977 Pls
1470 3990 Pls
1494 4002 Pls
1518 4014 Pls
1542 4026 Pls
1566 4036 Pls
1589 4047 Pls
1613 4057 Pls
1637 4066 Pls
1661 4075 Pls
1685 4084 Pls
1709 4092 Pls
1733 4100 Pls
1757 4108 Pls
1781 4115 Pls
1805 4122 Pls
1829 4129 Pls
1852 4134 Pls
1876 4141 Pls
1900 4146 Pls
1924 4151 Pls
1948 4156 Pls
1972 4161 Pls
1996 4165 Pls
2020 4169 Pls
2044 4173 Pls
2068 4176 Pls
2091 4179 Pls
2115 4182 Pls
2139 4184 Pls
2163 4187 Pls
2187 4188 Pls
2211 4190 Pls
2235 4191 Pls
2259 4192 Pls
2283 4193 Pls
2307 4193 Pls
2331 4193 Pls
2354 4193 Pls
2378 4193 Pls
2402 4192 Pls
2426 4191 Pls
2450 4190 Pls
2474 4189 Pls
2498 4187 Pls
2522 4184 Pls
2546 4182 Pls
2570 4180 Pls
2593 4176 Pls
2617 4174 Pls
2641 4170 Pls
2665 4166 Pls
2689 4163 Pls
2713 4159 Pls
2737 4154 Pls
2761 4149 Pls
2785 4145 Pls
2809 4140 Pls
2833 4134 Pls
2856 4129 Pls
2880 4123 Pls
2904 4117 Pls
2928 4111 Pls
2952 4104 Pls
2976 4098 Pls
3000 4091 Pls
3024 4084 Pls
3048 4077 Pls
3072 4069 Pls
3095 4062 Pls
3119 4053 Pls
3143 4046 Pls
3167 4038 Pls
3191 4030 Pls
3215 4021 Pls
3239 4012 Pls
3263 4003 Pls
3287 3995 Pls
3311 3985 Pls
3335 3976 Pls
3358 3967 Pls
3382 3957 Pls
3406 3948 Pls
3430 3938 Pls
3454 3928 Pls
3478 3918 Pls
3502 3908 Pls
3526 3898 Pls
3550 3888 Pls
3574 3878 Pls
3597 3867 Pls
3621 3857 Pls
3645 3846 Pls
3669 3835 Pls
3693 3824 Pls
3717 3813 Pls
3741 3802 Pls
3765 3791 Pls
3789 3780 Pls
3813 3769 Pls
3837 3758 Pls
3860 3746 Pls
3884 3735 Pls
3908 3724 Pls
3932 3712 Pls
3956 3701 Pls
3980 3689 Pls
4004 3677 Pls
4028 3666 Pls
4052 3655 Pls
4076 3643 Pls
4099 3631 Pls
4123 3619 Pls
4147 3607 Pls
4171 3596 Pls
4195 3584 Pls
4219 3572 Pls
4243 3560 Pls
4267 3548 Pls
4291 3537 Pls
4315 3525 Pls
4339 3513 Pls
4362 3501 Pls
4386 3489 Pls
4410 3478 Pls
4434 3466 Pls
4458 3454 Pls
4482 3442 Pls
4506 3430 Pls
4530 3418 Pls
4554 3407 Pls
4578 3395 Pls
4601 3383 Pls
4625 3371 Pls
4649 3359 Pls
4673 3348 Pls
4697 3336 Pls
4721 3324 Pls
4745 3313 Pls
4769 3301 Pls
4793 3290 Pls
4817 3278 Pls
4841 3266 Pls
4864 3255 Pls
4888 3243 Pls
4912 3232 Pls
4936 3220 Pls
4960 3209 Pls
4984 3197 Pls
5008 3186 Pls
5032 3175 Pls
5056 3164 Pls
5080 3152 Pls
5103 3141 Pls
5127 3130 Pls
5151 3119 Pls
5175 3108 Pls
5199 3097 Pls
5223 3086 Pls
5247 3075 Pls
5271 3064 Pls
5295 3053 Pls
5319 3042 Pls
5343 3031 Pls
5366 3020 Pls
5390 3010 Pls
5414 2999 Pls
5438 2989 Pls
5462 2978 Pls
5486 2967 Pls
5510 2957 Pls
5534 2946 Pls
5558 2936 Pls
5582 2926 Pls
5605 2915 Pls
5629 2905 Pls
5653 2895 Pls
5677 2884 Pls
5701 2874 Pls
5725 2864 Pls
5749 2854 Pls
5773 2844 Pls
5797 2834 Pls
5821 2824 Pls
5845 2815 Pls
5868 2805 Pls
5892 2795 Pls
5916 2785 Pls
5940 2776 Pls
5964 2766 Pls
5988 2756 Pls
6012 2747 Pls
6036 2737 Pls
6060 2728 Pls
6084 2719 Pls
6107 2709 Pls
6131 2700 Pls
6155 2691 Pls
6179 2682 Pls
6203 2672 Pls
6227 2663 Pls
6251 2654 Pls
6275 2645 Pls
6299 2636 Pls
6323 2628 Pls
6347 2619 Pls
6370 2610 Pls
6394 2601 Pls
6418 2592 Pls
6442 2584 Pls
6466 2575 Pls
6490 2567 Pls
6514 2558 Pls
6538 2549 Pls
6562 2541 Pls
6586 2533 Pls
6609 2524 Pls
6633 2516 Pls
6657 2508 Pls
6681 2500 Pls
6705 2491 Pls
6729 2483 Pls
6753 2475 Pls
6777 2467 Pls
6288 4637 Pls
1.000 UP
1.000 UL
LT1
LTb
5897 4437 M
[ [(Times) 200.0 0.0 true true 0 (Ge 220 0.7 cm)]
] -66.7 MRshow
LT1
1040 736 Crs
1064 738 Crs
1087 740 Crs
1111 743 Crs
1135 746 Crs
1159 750 Crs
1183 755 Crs
1207 761 Crs
1231 767 Crs
1255 774 Crs
1279 783 Crs
1303 792 Crs
1327 802 Crs
1350 814 Crs
1374 826 Crs
1398 839 Crs
1422 854 Crs
1446 870 Crs
1470 886 Crs
1494 904 Crs
1518 923 Crs
1542 943 Crs
1566 964 Crs
1589 985 Crs
1613 1008 Crs
1637 1031 Crs
1661 1056 Crs
1685 1081 Crs
1709 1107 Crs
1733 1133 Crs
1757 1160 Crs
1781 1187 Crs
1805 1216 Crs
1829 1244 Crs
1852 1273 Crs
1876 1302 Crs
1900 1332 Crs
1924 1361 Crs
1948 1392 Crs
1972 1422 Crs
1996 1452 Crs
2020 1483 Crs
2044 1513 Crs
2068 1543 Crs
2091 1574 Crs
2115 1604 Crs
2139 1635 Crs
2163 1665 Crs
2187 1696 Crs
2211 1725 Crs
2235 1755 Crs
2259 1785 Crs
2283 1815 Crs
2307 1844 Crs
2331 1873 Crs
2354 1901 Crs
2378 1930 Crs
2402 1958 Crs
2426 1986 Crs
2450 2013 Crs
2474 2041 Crs
2498 2068 Crs
2522 2095 Crs
2546 2121 Crs
2570 2147 Crs
2593 2173 Crs
2617 2198 Crs
2641 2223 Crs
2665 2248 Crs
2689 2272 Crs
2713 2296 Crs
2737 2320 Crs
2761 2343 Crs
2785 2366 Crs
2809 2389 Crs
2833 2411 Crs
2856 2433 Crs
2880 2455 Crs
2904 2476 Crs
2928 2497 Crs
2952 2517 Crs
2976 2538 Crs
3000 2558 Crs
3024 2578 Crs
3048 2597 Crs
3072 2616 Crs
3095 2635 Crs
3119 2654 Crs
3143 2672 Crs
3167 2690 Crs
3191 2707 Crs
3215 2724 Crs
3239 2742 Crs
3263 2758 Crs
3287 2775 Crs
3311 2791 Crs
3335 2807 Crs
3358 2823 Crs
3382 2838 Crs
3406 2853 Crs
3430 2868 Crs
3454 2883 Crs
3478 2898 Crs
3502 2912 Crs
3526 2926 Crs
3550 2939 Crs
3574 2954 Crs
3597 2967 Crs
3621 2980 Crs
3645 2993 Crs
3669 3005 Crs
3693 3018 Crs
3717 3030 Crs
3741 3043 Crs
3765 3054 Crs
3789 3066 Crs
3813 3078 Crs
3837 3089 Crs
3860 3100 Crs
3884 3112 Crs
3908 3123 Crs
3932 3133 Crs
3956 3144 Crs
3980 3154 Crs
4004 3164 Crs
4028 3175 Crs
4052 3184 Crs
4076 3194 Crs
4099 3204 Crs
4123 3213 Crs
4147 3222 Crs
4171 3231 Crs
4195 3240 Crs
4219 3249 Crs
4243 3258 Crs
4267 3266 Crs
4291 3275 Crs
4315 3283 Crs
4339 3292 Crs
4362 3299 Crs
4386 3308 Crs
4410 3315 Crs
4434 3323 Crs
4458 3330 Crs
4482 3338 Crs
4506 3345 Crs
4530 3353 Crs
4554 3359 Crs
4578 3366 Crs
4601 3374 Crs
4625 3380 Crs
4649 3387 Crs
4673 3393 Crs
4697 3400 Crs
4721 3406 Crs
4745 3412 Crs
4769 3418 Crs
4793 3425 Crs
4817 3430 Crs
4841 3436 Crs
4864 3442 Crs
4888 3448 Crs
4912 3454 Crs
4936 3458 Crs
4960 3464 Crs
4984 3469 Crs
5008 3475 Crs
5032 3479 Crs
5056 3484 Crs
5080 3489 Crs
5103 3494 Crs
5127 3498 Crs
5151 3504 Crs
5175 3508 Crs
5199 3513 Crs
5223 3517 Crs
5247 3522 Crs
5271 3525 Crs
5295 3529 Crs
5319 3534 Crs
5343 3537 Crs
5366 3541 Crs
5390 3544 Crs
5414 3549 Crs
5438 3552 Crs
5462 3556 Crs
5486 3559 Crs
5510 3562 Crs
5534 3566 Crs
5558 3570 Crs
5582 3573 Crs
5605 3576 Crs
5629 3579 Crs
5653 3582 Crs
5677 3584 Crs
5701 3587 Crs
5725 3589 Crs
5749 3592 Crs
5773 3595 Crs
5797 3597 Crs
5821 3600 Crs
5845 3601 Crs
5868 3604 Crs
5892 3606 Crs
5916 3608 Crs
5940 3610 Crs
5964 3612 Crs
5988 3614 Crs
6012 3615 Crs
6036 3618 Crs
6060 3619 Crs
6084 3621 Crs
6107 3622 Crs
6131 3624 Crs
6155 3626 Crs
6179 3627 Crs
6203 3628 Crs
6227 3629 Crs
6251 3631 Crs
6275 3632 Crs
6299 3633 Crs
6323 3634 Crs
6347 3634 Crs
6370 3635 Crs
6394 3636 Crs
6418 3637 Crs
6442 3637 Crs
6466 3637 Crs
6490 3638 Crs
6514 3639 Crs
6538 3639 Crs
6562 3639 Crs
6586 3640 Crs
6609 3639 Crs
6633 3640 Crs
6657 3640 Crs
6681 3640 Crs
6705 3640 Crs
6729 3640 Crs
6753 3639 Crs
6777 3640 Crs
6288 4437 Crs
1.000 UL
LTb
1020 4800 N
0 -4400 V
5780 0 V
0 4400 V
-5780 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
%%Pages: 1
