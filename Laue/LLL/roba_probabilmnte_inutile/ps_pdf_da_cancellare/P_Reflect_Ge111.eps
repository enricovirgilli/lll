%!PS-Adobe-2.0
%%Title: P_Reflect_Ge111.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue Dec 18 16:34:28 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (P_Reflect_Ge111.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Alessandro Pisa)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 18 16:34:28 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times) findfont 200 scalefont setfont
/Times findfont 200 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1220 640 M
5580 0 V
stroke
LTb
1220 640 M
63 0 V
5517 0 R
-63 0 V
stroke
1100 640 M
[ [(Times) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 1400 M
5580 0 V
stroke
LTb
1220 1400 M
63 0 V
5517 0 R
-63 0 V
stroke
1100 1400 M
[ [(Times) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 2160 M
5580 0 V
stroke
LTb
1220 2160 M
63 0 V
5517 0 R
-63 0 V
stroke
1100 2160 M
[ [(Times) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 2920 M
5580 0 V
stroke
LTb
1220 2920 M
63 0 V
5517 0 R
-63 0 V
stroke
1100 2920 M
[ [(Times) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 3680 M
5580 0 V
stroke
LTb
1220 3680 M
63 0 V
5517 0 R
-63 0 V
stroke
1100 3680 M
[ [(Times) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 4440 M
5580 0 V
stroke
LTb
1220 4440 M
63 0 V
5517 0 R
-63 0 V
stroke
1100 4440 M
[ [(Times) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
1.000 UL
LTb
1.000 UL
LTa
1220 640 M
0 3800 V
stroke
LTb
1220 640 M
0 63 V
0 3737 R
0 -63 V
stroke
1220 440 M
[ [(Times) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2078 640 M
0 3800 V
stroke
LTb
2078 640 M
0 63 V
0 3737 R
0 -63 V
stroke
2078 440 M
[ [(Times) 200.0 0.0 true true 0 ( 100)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
2937 640 M
0 63 V
0 200 R
0 3537 V
stroke
LTb
2937 640 M
0 63 V
0 3737 R
0 -63 V
stroke
2937 440 M
[ [(Times) 200.0 0.0 true true 0 ( 200)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
3795 640 M
0 63 V
0 200 R
0 3537 V
stroke
LTb
3795 640 M
0 63 V
0 3737 R
0 -63 V
stroke
3795 440 M
[ [(Times) 200.0 0.0 true true 0 ( 300)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
4654 640 M
0 63 V
0 200 R
0 3537 V
stroke
LTb
4654 640 M
0 63 V
0 3737 R
0 -63 V
stroke
4654 440 M
[ [(Times) 200.0 0.0 true true 0 ( 400)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
5512 640 M
0 63 V
0 200 R
0 3537 V
stroke
LTb
5512 640 M
0 63 V
0 3737 R
0 -63 V
stroke
5512 440 M
[ [(Times) 200.0 0.0 true true 0 ( 500)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTa
6371 640 M
0 63 V
0 200 R
0 3537 V
stroke
LTb
6371 640 M
0 63 V
0 3737 R
0 -63 V
stroke
6371 440 M
[ [(Times) 200.0 0.0 true true 0 ( 600)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1220 4440 N
0 -3800 V
5580 0 V
0 3800 V
-5580 0 V
Z stroke
LCb setrgbcolor
400 2540 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times) 200.0 0.0 true true 0 (Peak Reflectivity)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
4010 140 M
[ [(Times) 200.0 0.0 true true 0 (Energy\(keV\))]
] -66.7 MCshow
LTb
4010 4740 M
[ [(Times) 200.0 0.0 true true 0 (Ge\(111\) with Thickness = 2mm)]
] -66.7 MCshow
LCb setrgbcolor
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Times findfont 200 scalefont setfont
LTb
5897 803 M
("P_Reflectivity_Ge111_T2mm.dat") Rshow
LT0
1649 770 Pls
1658 796 Pls
1666 825 Pls
1675 857 Pls
1684 891 Pls
1692 928 Pls
1701 967 Pls
1709 1008 Pls
1718 1051 Pls
1726 1096 Pls
1735 1142 Pls
1744 1190 Pls
1752 1239 Pls
1761 1288 Pls
1769 1339 Pls
1778 1390 Pls
1787 1441 Pls
1795 1493 Pls
1804 1544 Pls
1812 1597 Pls
1821 1648 Pls
1830 1699 Pls
1838 1751 Pls
1847 1800 Pls
1855 1851 Pls
1864 1899 Pls
1872 1949 Pls
1881 1997 Pls
1890 2044 Pls
1898 2090 Pls
1907 2136 Pls
1915 2181 Pls
1924 2225 Pls
1933 2267 Pls
1941 2309 Pls
1950 2351 Pls
1958 2391 Pls
1967 2430 Pls
1975 2468 Pls
1984 2506 Pls
1993 2543 Pls
2001 2578 Pls
2010 2613 Pls
2018 2647 Pls
2027 2680 Pls
2036 2712 Pls
2044 2743 Pls
2053 2774 Pls
2061 2803 Pls
2070 2832 Pls
2078 2861 Pls
2087 2888 Pls
2096 2915 Pls
2104 2941 Pls
2113 2966 Pls
2121 2991 Pls
2130 3015 Pls
2139 3038 Pls
2147 3060 Pls
2156 3083 Pls
2164 3104 Pls
2173 3125 Pls
2181 3145 Pls
2190 3165 Pls
2199 3184 Pls
2207 3203 Pls
2216 3222 Pls
2224 3239 Pls
2233 3257 Pls
2242 3273 Pls
2250 3290 Pls
2259 3306 Pls
2267 3322 Pls
2276 3337 Pls
2284 3351 Pls
2293 3366 Pls
2302 3380 Pls
2310 3394 Pls
2319 3407 Pls
2327 3420 Pls
2336 3433 Pls
2345 3445 Pls
2353 3457 Pls
2362 3469 Pls
2370 3480 Pls
2379 3492 Pls
2388 3502 Pls
2396 3513 Pls
2405 3523 Pls
2413 3533 Pls
2422 3543 Pls
2430 3553 Pls
2439 3563 Pls
2448 3572 Pls
2456 3581 Pls
2465 3589 Pls
2473 3598 Pls
2482 3606 Pls
2491 3615 Pls
2499 3623 Pls
2508 3631 Pls
2516 3638 Pls
2525 3646 Pls
2533 3653 Pls
2542 3660 Pls
2551 3667 Pls
2559 3674 Pls
2568 3681 Pls
2576 3687 Pls
2585 3694 Pls
2594 3700 Pls
2602 3706 Pls
2611 3712 Pls
2619 3718 Pls
2628 3724 Pls
2636 3730 Pls
2645 3735 Pls
2654 3740 Pls
2662 3746 Pls
2671 3751 Pls
2679 3756 Pls
2688 3761 Pls
2697 3766 Pls
2705 3771 Pls
2714 3776 Pls
2722 3780 Pls
2731 3785 Pls
2739 3789 Pls
2748 3793 Pls
2757 3798 Pls
2765 3802 Pls
2774 3806 Pls
2782 3810 Pls
2791 3814 Pls
2800 3818 Pls
2808 3822 Pls
2817 3826 Pls
2825 3829 Pls
2834 3833 Pls
2842 3837 Pls
2851 3840 Pls
2860 3843 Pls
2868 3847 Pls
2877 3850 Pls
2885 3853 Pls
2894 3857 Pls
2903 3860 Pls
2911 3863 Pls
2920 3866 Pls
2928 3869 Pls
2937 3872 Pls
2946 3875 Pls
2954 3878 Pls
2963 3881 Pls
2971 3883 Pls
2980 3886 Pls
2988 3889 Pls
2997 3892 Pls
3006 3894 Pls
3014 3896 Pls
3023 3899 Pls
3031 3902 Pls
3040 3904 Pls
3049 3906 Pls
3057 3909 Pls
3066 3911 Pls
3074 3913 Pls
3083 3916 Pls
3091 3918 Pls
3100 3920 Pls
3109 3922 Pls
3117 3925 Pls
3126 3927 Pls
3134 3929 Pls
3143 3931 Pls
3152 3933 Pls
3160 3935 Pls
3169 3937 Pls
3177 3939 Pls
3186 3940 Pls
3194 3943 Pls
3203 3944 Pls
3212 3946 Pls
3220 3948 Pls
3229 3950 Pls
3237 3952 Pls
3246 3953 Pls
3255 3955 Pls
3263 3957 Pls
3272 3958 Pls
3280 3960 Pls
3289 3962 Pls
3297 3963 Pls
3306 3965 Pls
3315 3967 Pls
3323 3968 Pls
3332 3970 Pls
3340 3971 Pls
3349 3973 Pls
3358 3974 Pls
3366 3976 Pls
3375 3977 Pls
3383 3979 Pls
3392 3980 Pls
3400 3981 Pls
3409 3982 Pls
3418 3984 Pls
3426 3985 Pls
3435 3987 Pls
3443 3988 Pls
3452 3989 Pls
3461 3991 Pls
3469 3992 Pls
3478 3993 Pls
3486 3994 Pls
3495 3996 Pls
3504 3997 Pls
3512 3998 Pls
3521 3999 Pls
3529 4000 Pls
3538 4002 Pls
3546 4003 Pls
3555 4004 Pls
3564 4005 Pls
3572 4006 Pls
3581 4007 Pls
3589 4009 Pls
3598 4010 Pls
3607 4011 Pls
3615 4012 Pls
3624 4013 Pls
3632 4014 Pls
3641 4015 Pls
3649 4016 Pls
3658 4017 Pls
3667 4018 Pls
3675 4019 Pls
3684 4020 Pls
3692 4021 Pls
3701 4022 Pls
3710 4023 Pls
3718 4024 Pls
3727 4025 Pls
3735 4026 Pls
3744 4027 Pls
3752 4028 Pls
3761 4028 Pls
3770 4029 Pls
3778 4030 Pls
3787 4031 Pls
3795 4032 Pls
3804 4033 Pls
3813 4034 Pls
3821 4034 Pls
3830 4036 Pls
3838 4036 Pls
3847 4037 Pls
3855 4038 Pls
3864 4039 Pls
3873 4040 Pls
3881 4040 Pls
3890 4041 Pls
3898 4042 Pls
3907 4043 Pls
3916 4043 Pls
3924 4044 Pls
3933 4045 Pls
3941 4046 Pls
3950 4047 Pls
3958 4047 Pls
3967 4048 Pls
3976 4049 Pls
3984 4050 Pls
3993 4050 Pls
4001 4051 Pls
4010 4052 Pls
4019 4053 Pls
4027 4053 Pls
4036 4054 Pls
4044 4055 Pls
4053 4055 Pls
4062 4056 Pls
4070 4057 Pls
4079 4057 Pls
4087 4058 Pls
4096 4059 Pls
4104 4059 Pls
4113 4060 Pls
4122 4061 Pls
4130 4061 Pls
4139 4062 Pls
4147 4062 Pls
4156 4063 Pls
4165 4064 Pls
4173 4064 Pls
4182 4065 Pls
4190 4066 Pls
4199 4066 Pls
4207 4067 Pls
4216 4067 Pls
4225 4068 Pls
4233 4069 Pls
4242 4069 Pls
4250 4070 Pls
4259 4070 Pls
4268 4071 Pls
4276 4071 Pls
4285 4072 Pls
4293 4073 Pls
4302 4073 Pls
4310 4074 Pls
4319 4074 Pls
4328 4075 Pls
4336 4075 Pls
4345 4076 Pls
4353 4076 Pls
4362 4077 Pls
4371 4077 Pls
4379 4078 Pls
4388 4078 Pls
4396 4079 Pls
4405 4079 Pls
4413 4080 Pls
4422 4080 Pls
4431 4081 Pls
4439 4081 Pls
4448 4082 Pls
4456 4082 Pls
4465 4083 Pls
4474 4083 Pls
4482 4084 Pls
4491 4084 Pls
4499 4084 Pls
4508 4085 Pls
4516 4085 Pls
4525 4086 Pls
4534 4086 Pls
4542 4087 Pls
4551 4087 Pls
4559 4087 Pls
4568 4088 Pls
4577 4088 Pls
4585 4089 Pls
4594 4089 Pls
4602 4089 Pls
4611 4090 Pls
4620 4090 Pls
4628 4090 Pls
4637 4091 Pls
4645 4091 Pls
4654 4092 Pls
4662 4092 Pls
4671 4092 Pls
4680 4093 Pls
4688 4093 Pls
4697 4093 Pls
4705 4094 Pls
4714 4094 Pls
4723 4094 Pls
4731 4095 Pls
4740 4095 Pls
4748 4095 Pls
4757 4095 Pls
4765 4096 Pls
4774 4096 Pls
4783 4096 Pls
4791 4097 Pls
4800 4097 Pls
4808 4097 Pls
4817 4097 Pls
4826 4098 Pls
4834 4098 Pls
4843 4098 Pls
4851 4098 Pls
4860 4099 Pls
4868 4099 Pls
4877 4099 Pls
4886 4099 Pls
4894 4099 Pls
4903 4100 Pls
4911 4100 Pls
4920 4100 Pls
4929 4100 Pls
4937 4100 Pls
4946 4100 Pls
4954 4101 Pls
4963 4101 Pls
4971 4101 Pls
4980 4101 Pls
4989 4101 Pls
4997 4101 Pls
5006 4101 Pls
5014 4102 Pls
5023 4102 Pls
5032 4102 Pls
5040 4102 Pls
5049 4102 Pls
5057 4102 Pls
5066 4102 Pls
5074 4102 Pls
5083 4102 Pls
5092 4102 Pls
5100 4102 Pls
5109 4102 Pls
5117 4102 Pls
5126 4102 Pls
5135 4102 Pls
5143 4102 Pls
5152 4102 Pls
5160 4102 Pls
5169 4102 Pls
5178 4102 Pls
5186 4102 Pls
5195 4102 Pls
5203 4102 Pls
5212 4102 Pls
5220 4102 Pls
5229 4102 Pls
5238 4102 Pls
5246 4102 Pls
5255 4102 Pls
5263 4102 Pls
5272 4101 Pls
5281 4101 Pls
5289 4101 Pls
5298 4101 Pls
5306 4101 Pls
5315 4101 Pls
5323 4101 Pls
5332 4100 Pls
5341 4100 Pls
5349 4100 Pls
5358 4100 Pls
5366 4100 Pls
5375 4099 Pls
5384 4099 Pls
5392 4099 Pls
5401 4099 Pls
5409 4099 Pls
5418 4098 Pls
5426 4098 Pls
5435 4098 Pls
5444 4097 Pls
5452 4097 Pls
5461 4097 Pls
5469 4097 Pls
5478 4096 Pls
5487 4096 Pls
5495 4096 Pls
5504 4095 Pls
5512 4095 Pls
5521 4094 Pls
5529 4094 Pls
5538 4094 Pls
5547 4093 Pls
5555 4093 Pls
5564 4092 Pls
5572 4092 Pls
5581 4092 Pls
5590 4091 Pls
5598 4091 Pls
5607 4090 Pls
5615 4090 Pls
5624 4089 Pls
5632 4089 Pls
5641 4088 Pls
5650 4088 Pls
5658 4087 Pls
5667 4087 Pls
5675 4086 Pls
5684 4086 Pls
5693 4085 Pls
5701 4085 Pls
5710 4084 Pls
5718 4083 Pls
5727 4083 Pls
5736 4082 Pls
5744 4082 Pls
5753 4081 Pls
5761 4080 Pls
5770 4080 Pls
5778 4079 Pls
5787 4078 Pls
5796 4078 Pls
5804 4077 Pls
5813 4076 Pls
5821 4076 Pls
5830 4075 Pls
5839 4074 Pls
5847 4073 Pls
5856 4073 Pls
5864 4072 Pls
5873 4071 Pls
5881 4070 Pls
5890 4070 Pls
5899 4069 Pls
5907 4068 Pls
5916 4067 Pls
5924 4066 Pls
5933 4066 Pls
5942 4065 Pls
5950 4064 Pls
5959 4063 Pls
5967 4062 Pls
5976 4061 Pls
5984 4060 Pls
5993 4059 Pls
6002 4059 Pls
6010 4058 Pls
6019 4057 Pls
6027 4056 Pls
6036 4055 Pls
6045 4054 Pls
6053 4053 Pls
6062 4052 Pls
6070 4051 Pls
6079 4050 Pls
6087 4049 Pls
6096 4048 Pls
6105 4047 Pls
6113 4046 Pls
6122 4045 Pls
6130 4044 Pls
6139 4043 Pls
6148 4042 Pls
6156 4040 Pls
6165 4039 Pls
6173 4038 Pls
6182 4037 Pls
6190 4036 Pls
6199 4035 Pls
6208 4034 Pls
6216 4033 Pls
6225 4031 Pls
6233 4030 Pls
6242 4029 Pls
6251 4028 Pls
6259 4027 Pls
6268 4025 Pls
6276 4024 Pls
6285 4023 Pls
6294 4022 Pls
6302 4020 Pls
6311 4019 Pls
6319 4018 Pls
6328 4017 Pls
6336 4015 Pls
6345 4014 Pls
6354 4013 Pls
6362 4011 Pls
6288 803 Pls
1.000 UL
LTb
1220 4440 N
0 -3800 V
5580 0 V
0 3800 V
-5580 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
%%Pages: 1
